/*
 * Copyright 2019 richard.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package uk.theretiredprogrammer.imgeditor.crop;

import java.awt.image.BufferedImage;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//uk.theretiredprogrammer.imgeditor.crop//CropWindow//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "CropWindowTopComponent",
        iconBase = "uk/theretiredprogrammer/imgeditor/cut_red.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
public final class CropWindowTopComponent extends TopComponent {
    
    public CropWindowTopComponent() {
        initComponents();
        setName("Crop");
        setToolTipText("This is a CropWindow window");
    }
    
    public void addImage(BufferedImage img){
        scrollPane.add(new ImageDisplayComponent(img));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        croptitlelabel = new javax.swing.JLabel();
        left = new javax.swing.JTextField();
        leftlabel = new javax.swing.JLabel();
        rightlabel = new javax.swing.JLabel();
        right = new javax.swing.JTextField();
        toplabel = new javax.swing.JLabel();
        top = new javax.swing.JTextField();
        bottomlabel = new javax.swing.JLabel();
        bottom = new javax.swing.JTextField();
        widthlabel = new javax.swing.JLabel();
        width = new javax.swing.JTextField();
        heightlabel = new javax.swing.JLabel();
        height = new javax.swing.JTextField();
        usewidthheight = new javax.swing.JCheckBox();
        scrollPane = new javax.swing.JScrollPane();
        imgpanel = new javax.swing.JPanel();

        croptitlelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(croptitlelabel, "CROP CONTROL");

        left.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        left.setToolTipText("");
        left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftActionPerformed(evt);
            }
        });

        leftlabel.setLabelFor(left);
        org.openide.awt.Mnemonics.setLocalizedText(leftlabel, "Left:");

        rightlabel.setLabelFor(right);
        org.openide.awt.Mnemonics.setLocalizedText(rightlabel, "Right:");

        right.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightActionPerformed(evt);
            }
        });

        toplabel.setLabelFor(top);
        org.openide.awt.Mnemonics.setLocalizedText(toplabel, "Top:");

        top.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        top.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topActionPerformed(evt);
            }
        });

        bottomlabel.setLabelFor(bottom);
        org.openide.awt.Mnemonics.setLocalizedText(bottomlabel, "Bottom:");

        bottom.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        bottom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomActionPerformed(evt);
            }
        });

        widthlabel.setLabelFor(width);
        org.openide.awt.Mnemonics.setLocalizedText(widthlabel, "Width:");

        width.setBackground(new java.awt.Color(128, 128, 128));
        width.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        width.setEnabled(false);
        width.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                widthActionPerformed(evt);
            }
        });

        heightlabel.setLabelFor(heightlabel);
        org.openide.awt.Mnemonics.setLocalizedText(heightlabel, "Height:");

        height.setBackground(new java.awt.Color(128, 128, 128));
        height.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        height.setEnabled(false);
        height.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(usewidthheight, "Use Width/Height");
        usewidthheight.setToolTipText("");
        usewidthheight.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        usewidthheight.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                usewidthheightItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(croptitlelabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                        .addComponent(heightlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(height))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                        .addComponent(rightlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(right, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                        .addComponent(toplabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(top))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                            .addComponent(bottomlabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(bottom))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                            .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                                    .addComponent(widthlabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(width, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                                    .addComponent(leftlabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(usewidthheight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(croptitlelabel)
                .addGap(22, 22, 22)
                .addComponent(usewidthheight)
                .addGap(18, 18, 18)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(leftlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toplabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bottomlabel)
                    .addComponent(bottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(width, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(widthlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heightlabel))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        add(controlPanel);
        controlPanel.setBounds(0, 0, 180, 510);

        javax.swing.GroupLayout imgpanelLayout = new javax.swing.GroupLayout(imgpanel);
        imgpanel.setLayout(imgpanelLayout);
        imgpanelLayout.setHorizontalGroup(
            imgpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
        );
        imgpanelLayout.setVerticalGroup(
            imgpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
        );

        scrollPane.setViewportView(imgpanel);

        add(scrollPane);
        scrollPane.setBounds(180, 0, 540, 510);
    }// </editor-fold>//GEN-END:initComponents

    private void leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftActionPerformed

    private void rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightActionPerformed

    private void topActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topActionPerformed

    private void bottomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bottomActionPerformed

    private void widthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_widthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_widthActionPerformed

    private void heightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heightActionPerformed

    private void usewidthheightItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_usewidthheightItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
            // disable width/height
            disablefield(width);
            disablefield(height);
            // use right/bottom
            enablefield(right);
            enablefield(bottom);
        } else{
            // disable right/bottom
            disablefield(right);
            disablefield(bottom);
            // use width/height
            enablefield(width);
            enablefield(height);
        }
    }//GEN-LAST:event_usewidthheightItemStateChanged

    private void enablefield(javax.swing.JTextField field){
        field.setEnabled(true);
        field.setBackground(new java.awt.Color(255, 255, 255));
    }
    
    private void disablefield(javax.swing.JTextField field){
        field.setEnabled(false);
        field.setBackground(new java.awt.Color(128, 128, 128));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bottom;
    private javax.swing.JLabel bottomlabel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel croptitlelabel;
    private javax.swing.JTextField height;
    private javax.swing.JLabel heightlabel;
    private javax.swing.JPanel imgpanel;
    private javax.swing.JTextField left;
    private javax.swing.JLabel leftlabel;
    private javax.swing.JTextField right;
    private javax.swing.JLabel rightlabel;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextField top;
    private javax.swing.JLabel toplabel;
    private javax.swing.JCheckBox usewidthheight;
    private javax.swing.JTextField width;
    private javax.swing.JLabel widthlabel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
